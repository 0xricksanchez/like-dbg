[general]
# Directory where local ssh keys for the containers may be stored
ssh_dir = .ssh
# Architecture which is targeted
# Currently only x86_64 and arm64 is supported
arch = arm64
# The docker socket, which on UNIX systems defaults to the one below
docker_sock = unix://var/run/docker.sock
# Location where stuff is mounted within docker containers
docker_mnt = /io

[rootfs_general]
# Directory where the root file system will be build
rootfs_dir = io/
# file system base prefix
rootfs_base = filesystem-
# Optional: file system suffix
rootfs_ftype = 

[rootfs_builder]
# Docker image tag for the container that builds us a root file system that allows booting the kernel in QEMU
tag = like_rootfs
# Name of the dockerfile
dockerfile = .dockerfile_rootfs
# SSH forwarding port on our host system 
ssh_fwd_port = 2222

[debuggee]
# Amount of RAM
memory = 4096
# Number of cores
smp = 2
# Enable/Disable KVM support
kvm = yes
# Enable/Disable the GDB stub
gdb = yes
# Enable/Disable KASLR
kaslr = no
# Enable/Disable SMEP
smep = yes
# Enable/Disable SMAP
smap = yes
# Enable/Disable KPTI
kpti = yes

[debugger]
# Docker image tag for the debug container
tag = like_debugger
# Name of the dockerfile 
dockerfile = .dockerfile_dbg

[kernel_general]
# Folder name the kernel source is unpacked into
kernel_root = kernel_root

[kernel_dl]
# URL that gets us the Linux kernel 
snap_uri = https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/snapshot/linux-
# URL to automatically resolve the latest commit 
commit_uri = https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/
# You can set a tag, e.g.: 5.15 to downloaded the specific release.
# If you set tag and commit, the tag will be preferred.
# We can checkout a specific release tag like 5.15-rc2
tag = 
# Alternatively, we can grab a specific commit
# If tag and commit are both unset, we will automatically grab the latest available commit
commit = 47700948a4abb4a5ae13ef943ff682a7f327547a

[kernel_builder]
# Compiler used for building the Linux kernel
compiler = clang
# TODO write function that handles patching the kernel source
patch_dir = 
# Mode specifies the kernel configuration.
# Currently 2 options are offered: generic, syzkaller
#   - generic: Builds a debuggable kernel version
#   - syzkaller: Adds more specific kernel configurations that are used for kernel fuzzing
mode = generic

